name: Auto Codespace Runner

on:
  workflow_dispatch:
  repository_dispatch:
    types: [start-next-cycle]

permissions:
  contents: read
  actions: write

jobs:
  codespace-cycle:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # max 6h

    steps:
      - name: Start cycle
        run: echo "=== Starting new 4h10m cycle ==="

      # ðŸ”¹ Find and start existing Codespace dynamically
      - name: Start existing Codespace if not running
        env:
          CODESPACE_PAT: ${{ secrets.CODESPACE_PAT }}
          CODESPACE_SEARCH: "automatic-space-train"   # wpisz unikalnÄ… czÄ™Å›Ä‡ nazwy Codespace
        run: |
          echo "Fetching list of Codespaces..."
          CODESPACES=$(curl -s -H "Authorization: token $CODESPACE_PAT" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/user/codespaces)

          # Wybierz Codespace, ktÃ³ry zawiera nazwÄ™ SEARCH
          CODESPACE_NAME=$(echo "$CODESPACES" | jq -r ".codespaces[] | select(.name | test(\"$CODESPACE_SEARCH\")) | .name")

          if [ -z "$CODESPACE_NAME" ]; then
            echo "No Codespace found matching '$CODESPACE_SEARCH'."
            exit 1
          fi

          echo "Found Codespace: $CODESPACE_NAME"

          # SprawdÅº status
          STATUS=$(echo "$CODESPACES" | jq -r ".codespaces[] | select(.name==\"$CODESPACE_NAME\") | .state")
          echo "Current status: $STATUS"

          if [ "$STATUS" != "Available" ]; then
            echo "Codespace already running or provisioning."
          else
            echo "Starting Codespace..."
            RESPONSE=$(curl -s -w "\nHTTP status: %{http_code}\n" -X POST \
              -H "Authorization: token $CODESPACE_PAT" \
              -H "Accept: application/vnd.github+json" \
              https://api.github.com/user/codespaces/$CODESPACE_NAME/start)
            echo "$RESPONSE"
          fi

      # ðŸ”¹ Wait 4h10m before next cycle
      - name: Wait 4h10m before next cycle
        run: |
          echo "Sleeping for 4h10m..."
          sleep $((4*3600 + 10*60))

      # ðŸ”¹ Trigger next cycle
      - name: Trigger next cycle
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO: ${{ github.repository }}
        run: |
          echo "Triggering next cycle..."
          curl -X POST \
            -H "Authorization: token $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/$REPO/dispatches \
            -d '{"event_type": "start-next-cycle"}'

      - name: Done
        run: echo "=== Cycle complete ==="
